// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ReForm = require("@rescriptbr/reform/src/ReForm.bs.js");

function get(values, field) {
  if (field) {
    return values.body;
  } else {
    return values.title;
  }
}

function set(values, field, value) {
  if (field) {
    return {
            title: values.title,
            body: value
          };
  } else {
    return {
            title: value,
            body: values.body
          };
  }
}

var FormFields = {
  get: get,
  set: set
};

var include = ReForm.Make({
      set: set,
      get: get
    });

var ReSchema = include.ReSchema;

var Validation = include.Validation;

var getInitialFieldsState = include.getInitialFieldsState;

var formContext = include.formContext;

var useFormContext = include.useFormContext;

var useField = include.useField;

var Provider = include.Provider;

var Field = include.Field;

var use = include.use;

var initialState = {
  title: "",
  body: ""
};

exports.FormFields = FormFields;
exports.ReSchema = ReSchema;
exports.Validation = Validation;
exports.getInitialFieldsState = getInitialFieldsState;
exports.formContext = formContext;
exports.useFormContext = useFormContext;
exports.useField = useField;
exports.Provider = Provider;
exports.Field = Field;
exports.use = use;
exports.initialState = initialState;
/* include Not a pure module */
