// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Text = require("../Text/Text.bs.js");
var React = require("react");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Button_Styles = require("./Button_Styles.bs.js");
var AncestorCustom = require("../../lib/Theme/AncestorCustom.bs.js");

function Button(Props) {
  var childrenOpt = Props.children;
  var type_ = Props.type_;
  var onClick = Props.onClick;
  var disabledOpt = Props.disabled;
  var intentOpt = Props.intent;
  var children = childrenOpt !== undefined ? Caml_option.valFromOption(childrenOpt) : null;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var intent = intentOpt !== undefined ? intentOpt : "primary";
  var tmp = {
    tag: "button",
    className: Button_Styles.buttonStyles(intent, disabled),
    children: React.createElement(AncestorCustom.Config.Box.make, {
          children: React.createElement($$Text.Button.make, {
                children: children
              })
        }),
    disabled: disabled
  };
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  if (type_ !== undefined) {
    tmp.type_ = Caml_option.valFromOption(type_);
  }
  return React.createElement(AncestorCustom.Config.Base.make, tmp);
}

function Button$Icon(Props) {
  var children = Props.children;
  var onClick = Props.onClick;
  var tmp = {
    tag: "button",
    className: Button_Styles.iconStyles,
    children: children
  };
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement(AncestorCustom.Config.Base.make, tmp);
}

var Icon = {
  make: Button$Icon
};

var make = Button;

exports.make = make;
exports.Icon = Icon;
/* Text Not a pure module */
