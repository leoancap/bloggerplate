// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Card = require("../Card/Card.bs.js");
var $$Text = require("../Text/Text.bs.js");
var CssJs = require("bs-css-emotion/src/CssJs.bs.js");
var Theme = require("../../lib/Theme/Theme.bs.js");
var React = require("react");
var Caml_option = require("rescript/lib/js/caml_option.js");
var AncestorCustom = require("../../lib/Theme/AncestorCustom.bs.js");
var Js_null_undefined = require("rescript/lib/js/js_null_undefined.js");
var Hooks = require("react-relay/hooks");
var RescriptRelay_Internal = require("rescript-relay/src/RescriptRelay_Internal.bs.js");
var SinglePost_post_graphql = require("../../__generated__/rescript-relay/SinglePost_post_graphql.bs.js");

function use(fRef) {
  var data = Hooks.useFragment(SinglePost_post_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(SinglePost_post_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(SinglePost_post_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return SinglePost_post_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var PostFragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

var deleteProp = ((newProps, key) => delete newProps[key]);

function getOrEmpty(str) {
  if (str !== undefined) {
    return " " + str;
  } else {
    return "";
  }
}

var styles = CssJs.style([
      CssJs.label("PostWrapper"),
      CssJs.marginTop(Theme.Padding.xs)
    ]);

function make(props) {
  var className = styles + getOrEmpty(Caml_option.undefined_to_opt(props.className));
  var stylesObject = {
    className: className,
    ref: Caml_option.undefined_to_opt(props.innerRef)
  };
  var newProps = Object.assign({}, props, stylesObject);
  deleteProp(newProps, "innerRef");
  return React.createElement("div", newProps);
}

var PostWrapper = {
  deleteProp: deleteProp,
  getOrEmpty: getOrEmpty,
  styles: styles,
  make: make
};

function SinglePost(Props) {
  var post = Props.post;
  var post$1 = use(post);
  return React.createElement(Card.make, {
              children: React.createElement(AncestorCustom.Config.Box.make, {
                    children: null
                  }, React.createElement(AncestorCustom.Config.Box.make, {
                        children: React.createElement($$Text.H3.make, {
                              children: post$1.title
                            })
                      }), React.createElement(make, {
                        children: React.createElement($$Text.Body.make, {
                              children: post$1.body
                            })
                      }))
            });
}

var make$1 = SinglePost;

exports.PostFragment = PostFragment;
exports.PostWrapper = PostWrapper;
exports.make = make$1;
/* styles Not a pure module */
