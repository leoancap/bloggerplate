// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Posts = require("../components/Posts/Posts.bs.js");
var React = require("react");
var RelayEnv = require("../lib/RelayEnv/RelayEnv.bs.js");
var AncestorCustom = require("../lib/Theme/AncestorCustom.bs.js");
var React$1 = require("next-auth/react");

function $$default(param) {
  return React.createElement(React.Fragment, undefined, React.createElement(AncestorCustom.Config.Box.make, {
                  children: React.createElement(React.Suspense, {
                        children: React.createElement(Posts.make, {}),
                        fallback: "Loading...."
                      })
                }));
}

function getServerSideProps(ctx) {
  var environment = RelayEnv.createEnvironment(undefined, undefined);
  var postsPromise = Posts.Query.fetchPromised(environment, undefined, undefined, undefined, undefined);
  var userPromise = React$1.getSession(ctx);
  return Promise.all([
                postsPromise,
                userPromise
              ]).then(function (result) {
              var records = RelayEnv.getRecords(environment);
              return Promise.resolve({
                          props: {
                            session: result[1],
                            records: records
                          }
                        });
            });
}

exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
exports.getServerSideProps = getServerSideProps;
/* Posts Not a pure module */
