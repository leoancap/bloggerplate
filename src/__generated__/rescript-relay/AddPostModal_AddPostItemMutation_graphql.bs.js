// Generated by ReScript, PLEASE EDIT WITH CARE
/* @generated */
'use strict';

var RescriptRelay = require("rescript-relay/src/RescriptRelay.bs.js");

var Types = {};

var wrapResponseConverter = {"__root":{"addPostItem":{"n":""},"addPostItem_addedPostItem":{"n":""}}};

function convertWrapResponse(v) {
  return RescriptRelay.convertObj(v, wrapResponseConverter, undefined, null);
}

var responseConverter = {"__root":{"addPostItem":{"n":""},"addPostItem_addedPostItem":{"n":""}}};

function convertResponse(v) {
  return RescriptRelay.convertObj(v, responseConverter, undefined, undefined);
}

var wrapRawResponseConverter = {"__root":{"addPostItem":{"n":""},"addPostItem_addedPostItem":{"n":""}}};

function convertWrapRawResponse(v) {
  return RescriptRelay.convertObj(v, wrapRawResponseConverter, undefined, null);
}

var rawResponseConverter = {"__root":{"addPostItem":{"n":""},"addPostItem_addedPostItem":{"n":""}}};

function convertRawResponse(v) {
  return RescriptRelay.convertObj(v, rawResponseConverter, undefined, undefined);
}

var variablesConverter = {"__root":{"input":{"r":"AddPostItemInput"}},"AddPostItemInput":{"clientMutationId":{"n":""}}};

function convertVariables(v) {
  return RescriptRelay.convertObj(v, variablesConverter, undefined, undefined);
}

var Internal = {
  wrapResponseConverter: wrapResponseConverter,
  wrapResponseConverterMap: undefined,
  convertWrapResponse: convertWrapResponse,
  responseConverter: responseConverter,
  responseConverterMap: undefined,
  convertResponse: convertResponse,
  wrapRawResponseConverter: wrapRawResponseConverter,
  wrapRawResponseConverterMap: undefined,
  convertWrapRawResponse: convertWrapRawResponse,
  rawResponseConverter: rawResponseConverter,
  rawResponseConverterMap: undefined,
  convertRawResponse: convertRawResponse,
  variablesConverter: variablesConverter,
  variablesConverterMap: undefined,
  convertVariables: convertVariables
};

function make_addPostItemInput(title, body, clientMutationId, param) {
  return {
          title: title,
          body: body,
          clientMutationId: clientMutationId
        };
}

function makeVariables(input, connections) {
  return {
          input: input,
          connections: connections
        };
}

function make_rawResponse_addPostItem_addedPostItem(id, title, body) {
  return {
          id: id,
          title: title,
          body: body
        };
}

function make_rawResponse_addPostItem(addedPostItem, param) {
  return {
          addedPostItem: addedPostItem
        };
}

function make_response_addPostItem_addedPostItem(id, title, body) {
  return {
          id: id,
          title: title,
          body: body
        };
}

function make_response_addPostItem(addedPostItem, param) {
  return {
          addedPostItem: addedPostItem
        };
}

function makeOptimisticResponse(addPostItem, param) {
  return {
          addPostItem: addPostItem
        };
}

var Utils = {
  make_addPostItemInput: make_addPostItemInput,
  makeVariables: makeVariables,
  make_rawResponse_addPostItem_addedPostItem: make_rawResponse_addPostItem_addedPostItem,
  make_rawResponse_addPostItem: make_rawResponse_addPostItem,
  make_response_addPostItem_addedPostItem: make_response_addPostItem_addedPostItem,
  make_response_addPostItem: make_response_addPostItem,
  makeOptimisticResponse: makeOptimisticResponse
};

var node = ((function(){
var v0 = {
  "defaultValue": null,
  "kind": "LocalArgument",
  "name": "connections"
},
v1 = {
  "defaultValue": null,
  "kind": "LocalArgument",
  "name": "input"
},
v2 = [
  {
    "kind": "Variable",
    "name": "input",
    "variableName": "input"
  }
],
v3 = {
  "alias": null,
  "args": null,
  "concreteType": "PostItem",
  "kind": "LinkedField",
  "name": "addedPostItem",
  "plural": false,
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "title",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "body",
      "storageKey": null
    }
  ],
  "storageKey": null
};
return {
  "fragment": {
    "argumentDefinitions": [
      (v0/*: any*/),
      (v1/*: any*/)
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "AddPostModal_AddPostItemMutation",
    "selections": [
      {
        "alias": null,
        "args": (v2/*: any*/),
        "concreteType": "AddPostItemPayload",
        "kind": "LinkedField",
        "name": "addPostItem",
        "plural": false,
        "selections": [
          (v3/*: any*/)
        ],
        "storageKey": null
      }
    ],
    "type": "Mutation",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      (v1/*: any*/),
      (v0/*: any*/)
    ],
    "kind": "Operation",
    "name": "AddPostModal_AddPostItemMutation",
    "selections": [
      {
        "alias": null,
        "args": (v2/*: any*/),
        "concreteType": "AddPostItemPayload",
        "kind": "LinkedField",
        "name": "addPostItem",
        "plural": false,
        "selections": [
          (v3/*: any*/),
          {
            "alias": null,
            "args": null,
            "filters": null,
            "handle": "appendNode",
            "key": "",
            "kind": "LinkedHandle",
            "name": "addedPostItem",
            "handleArgs": [
              {
                "kind": "Variable",
                "name": "connections",
                "variableName": "connections"
              },
              {
                "kind": "Literal",
                "name": "edgeTypeName",
                "value": "PostItemEdge"
              }
            ]
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "cacheID": "19ab95daa0d5ae467e2f97c30828d619",
    "id": null,
    "metadata": {},
    "name": "AddPostModal_AddPostItemMutation",
    "operationKind": "mutation",
    "text": "mutation AddPostModal_AddPostItemMutation(\n  $input: AddPostItemInput!\n) {\n  addPostItem(input: $input) {\n    addedPostItem {\n      id\n      title\n      body\n    }\n  }\n}\n"
  }
};
})());

exports.Types = Types;
exports.Internal = Internal;
exports.Utils = Utils;
exports.node = node;
/* node Not a pure module */
