// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Js_undefined = require("rescript/lib/js/js_undefined.js");
var React = require("@testing-library/react");
var DomTestingLibrary__FireEvent = require("bs-dom-testing-library/src/DomTestingLibrary__FireEvent.bs.js");

var FireEvent = DomTestingLibrary__FireEvent;

function act(callback) {
  React.act(function (param) {
        Curry._1(callback, undefined);
        
      });
  
}

function getByLabelText(matcher, options, result) {
  return result.getByLabelText(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByLabelText(matcher, options, result) {
  return result.getAllByLabelText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByLabelText(matcher, options, result) {
  return result.queryByLabelText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByLabelText(matcher, options, result) {
  return result.queryAllByLabelText(matcher.VAL, Js_undefined.fromOption(options));
}

function findByLabelText(matcher, options, result) {
  return result.findByLabelText(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByLabelText(matcher, options, result) {
  return result.findAllByLabelText(matcher.VAL, Js_undefined.fromOption(options));
}

function getByPlaceholderText(matcher, options, result) {
  return result.getByPlaceholderText(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByPlaceholderText(matcher, options, result) {
  return result.getAllByPlaceholderText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByPlaceholderText(matcher, options, result) {
  return result.queryByPlaceholderText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByPlaceholderText(matcher, options, result) {
  return result.queryAllByPlaceholderText(matcher.VAL, Js_undefined.fromOption(options));
}

function findByPlaceholderText(matcher, options, result) {
  return result.findByPlaceholderText(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByPlaceholderText(matcher, options, result) {
  return result.findAllByPlaceholderText(matcher.VAL, Js_undefined.fromOption(options));
}

function getByText(matcher, options, result) {
  return result.getByText(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByText(matcher, options, result) {
  return result.getAllByText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByText(matcher, options, result) {
  return result.queryByText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByText(matcher, options, result) {
  return result.queryAllByText(matcher.VAL, Js_undefined.fromOption(options));
}

function findByText(matcher, options, result) {
  return result.findByText(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByText(matcher, options, result) {
  return result.findAllByText(matcher.VAL, Js_undefined.fromOption(options));
}

function getByAltText(matcher, options, result) {
  return result.getByAltText(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByAltText(matcher, options, result) {
  return result.getAllByAltText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByAltText(matcher, options, result) {
  return result.queryByAltText(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByAltText(matcher, options, result) {
  return result.queryAllByAltText(matcher.VAL, Js_undefined.fromOption(options));
}

function findByAltText(matcher, options, result) {
  return result.findByAltText(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByAltText(matcher, options, result) {
  return result.findAllByAltText(matcher.VAL, Js_undefined.fromOption(options));
}

function getByTitle(matcher, options, result) {
  return result.getByTitle(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByTitle(matcher, options, result) {
  return result.getAllByTitle(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByTitle(matcher, options, result) {
  return result.queryByTitle(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByTitle(matcher, options, result) {
  return result.queryAllByTitle(matcher.VAL, Js_undefined.fromOption(options));
}

function findByTitle(matcher, options, result) {
  return result.findByTitle(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByTitle(matcher, options, result) {
  return result.findAllByTitle(matcher.VAL, Js_undefined.fromOption(options));
}

function getByDisplayValue(matcher, options, result) {
  return result.getByDisplayValue(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByDisplayValue(matcher, options, result) {
  return result.getAllByDisplayValue(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByDisplayValue(matcher, options, result) {
  return result.queryByDisplayValue(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByDisplayValue(matcher, options, result) {
  return result.queryAllByDisplayValue(matcher.VAL, Js_undefined.fromOption(options));
}

function findByDisplayValue(matcher, options, result) {
  return result.findByDisplayValue(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByDisplayValue(matcher, options, result) {
  return result.findAllByDisplayValue(matcher.VAL, Js_undefined.fromOption(options));
}

function getByRole(matcher, options, result) {
  return result.getByRole(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByRole(matcher, options, result) {
  return result.getAllByRole(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByRole(matcher, options, result) {
  return result.queryByRole(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByRole(matcher, options, result) {
  return result.queryAllByRole(matcher.VAL, Js_undefined.fromOption(options));
}

function findByRole(matcher, options, result) {
  return result.findByRole(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByRole(matcher, options, result) {
  return result.findAllByRole(matcher.VAL, Js_undefined.fromOption(options));
}

function getByTestId(matcher, options, result) {
  return result.getByTestId(matcher.VAL, Js_undefined.fromOption(options));
}

function getAllByTestId(matcher, options, result) {
  return result.getAllByTestId(matcher.VAL, Js_undefined.fromOption(options));
}

function queryByTestId(matcher, options, result) {
  return result.queryByTestId(matcher.VAL, Js_undefined.fromOption(options));
}

function queryAllByTestId(matcher, options, result) {
  return result.queryAllByTestId(matcher.VAL, Js_undefined.fromOption(options));
}

function findByTestId(matcher, options, result) {
  return result.findByTestId(matcher.VAL, Js_undefined.fromOption(options));
}

function findAllByTestId(matcher, options, result) {
  return result.findAllByTestId(matcher.VAL, Js_undefined.fromOption(options));
}

function render(baseElement, container, hydrate, wrapper, queries, element) {
  var baseElement_ = container !== undefined ? Caml_option.valFromOption(container) : Js_undefined.fromOption(baseElement);
  var container_ = Js_undefined.fromOption(container);
  return React.render(element, {
              baseElement: baseElement_,
              container: container_,
              hydrate: Js_undefined.fromOption(hydrate),
              wrapper: Js_undefined.fromOption(wrapper),
              queries: Js_undefined.fromOption(queries)
            });
}

function debug(el, maxLengthToPrint, param) {
  var partial_arg = Js_undefined.fromOption(maxLengthToPrint);
  var partial_arg$1 = Js_undefined.fromOption(el);
  return function (param) {
    param.debug(partial_arg$1, partial_arg);
    
  };
}

exports.FireEvent = FireEvent;
exports.act = act;
exports.getByLabelText = getByLabelText;
exports.getAllByLabelText = getAllByLabelText;
exports.queryByLabelText = queryByLabelText;
exports.queryAllByLabelText = queryAllByLabelText;
exports.findByLabelText = findByLabelText;
exports.findAllByLabelText = findAllByLabelText;
exports.getByPlaceholderText = getByPlaceholderText;
exports.getAllByPlaceholderText = getAllByPlaceholderText;
exports.queryByPlaceholderText = queryByPlaceholderText;
exports.queryAllByPlaceholderText = queryAllByPlaceholderText;
exports.findByPlaceholderText = findByPlaceholderText;
exports.findAllByPlaceholderText = findAllByPlaceholderText;
exports.getByText = getByText;
exports.getAllByText = getAllByText;
exports.queryByText = queryByText;
exports.queryAllByText = queryAllByText;
exports.findByText = findByText;
exports.findAllByText = findAllByText;
exports.getByAltText = getByAltText;
exports.getAllByAltText = getAllByAltText;
exports.queryByAltText = queryByAltText;
exports.queryAllByAltText = queryAllByAltText;
exports.findByAltText = findByAltText;
exports.findAllByAltText = findAllByAltText;
exports.getByTitle = getByTitle;
exports.getAllByTitle = getAllByTitle;
exports.queryByTitle = queryByTitle;
exports.queryAllByTitle = queryAllByTitle;
exports.findByTitle = findByTitle;
exports.findAllByTitle = findAllByTitle;
exports.getByDisplayValue = getByDisplayValue;
exports.getAllByDisplayValue = getAllByDisplayValue;
exports.queryByDisplayValue = queryByDisplayValue;
exports.queryAllByDisplayValue = queryAllByDisplayValue;
exports.findByDisplayValue = findByDisplayValue;
exports.findAllByDisplayValue = findAllByDisplayValue;
exports.getByRole = getByRole;
exports.getAllByRole = getAllByRole;
exports.queryByRole = queryByRole;
exports.queryAllByRole = queryAllByRole;
exports.findByRole = findByRole;
exports.findAllByRole = findAllByRole;
exports.getByTestId = getByTestId;
exports.getAllByTestId = getAllByTestId;
exports.queryByTestId = queryByTestId;
exports.queryAllByTestId = queryAllByTestId;
exports.findByTestId = findByTestId;
exports.findAllByTestId = findAllByTestId;
exports.render = render;
exports.debug = debug;
/* @testing-library/react Not a pure module */
